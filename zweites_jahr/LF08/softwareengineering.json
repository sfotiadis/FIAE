{
    "Kerninhalte": {
        "allgemein": "Methoden der Softwareentwicklung nach dem Vorbild der Ingenieurswissenschaften",
        "Entwicklungsverlauf": {
            "linear": "Wasserfallmodell",
            "iterativ": "Spiralmodell"
        },
        "Phasen": ["Planung", "Analyse", "Entwurf", "Implementierung", "Test","Dokumentation"],
        "Phasenausprägung": {
            "variiert je nach": ["Projektgröße", "Teamgröße", "Entwicklungsprozess"]
        },
        "Entwicklungsprozesse":{
            "Eignung": {
                "Abhängig von": ["Projektgröße", "Teamzusammensetzung", "technische Vorgaben"]
            },
            "Arten": {
                "Unified Process": "setzt UML ein",
                "Extreme Programming": ["Programmierarbeit steht im mittelpunkt", "flexibel bei Änderungen", "schnelle Ergebnisse"]
            }
        },
        "Arbeitsmittel": {
            "UML": "Unified Modeling Language",
            "Entwurfsmuster": "Design Patterns; ",
            "Unit-Tests":{
                "allgemein": "Testen von Software",
                "Test-first-Ansatz": ["Code funktioniert jederzeit", "jede Klasse besitzt einen Test"]
            }
        }
    },
    "Einleitung" : {
        "Zitat": "Nicht mit Erfindungen, sondern mit Verbesserungen macht man Vermögen. - Henry Ford",
        "Software-Engineering" : {
            "Begrifflichkeiten": {
                "Software-Engineering": "gesamtheit der Arbeitsschritte der prof. Softwareentwicklung",
                "Engineering": "Ingenieurswissenschaftliche Expertise auf Softwareentwicklung angewandt",
                "Softwarekrise": ["Mitte 60er Jahre", "Entwicklungskosten > Anschaffungskosten", "Entwicklungsmethoden < Weiterentwicklung der Hardware"]
            },
            "Konsequenz der Softwarekrise": {
                "neuentwickelte Verfahren": {
                    "OOA": "Objektorientierte Analyse",
                    "OOD": "Objektorientiertes Design",
                    "OOP": "Objektorientierte Programmierung"
                },
                "Ansatz": "reale Elemente werden programmatisch abgebildet",
                "Ursprünge": "Programmiersprache Smalltalk"
            }
        }
    },
    "Überblick (11.1)": {
        "Entwicklungszyklus" : {
            "Projektphasen": {
                "1. Planung": {
                    "allgemein": ["Projektvorgaben", "Lastenheft", "Pflichtenheft"],
                    "Kleinprojekte": ["Notizen in Textdokument", "kommentare im Programmcode"],
                    "bei mehreren Personen": "Absprachen über einen bestimmten Kommentarstil und Verschriftlichung (Mindeststandard)",
                    "Fixierung aller Informationen": "Grundlage für benutzbare Dokumentation"
                },
                "2. Analyse": {
                    "allgemein": "Projektgegenstand wird untersucht",
                    "definiert": ["Geschäftsprozesse","Elemente", "Daten"]
                },
                "3. Entwurf":{ 
                    "allgemein": "Entwicklung eines Modells/einer Arbeitsvorlage",
                    "definiert": ["einheitlicher Schnittstellen", "gemeinsame Konventionen"]
                },
                "4. Implementierung": "Umsetzung des Entwurfs in Programmcode",
                "5. Test": {
                    "Überprüfung von": ["technische Korrektheit", "Erfüllung der Vorgaben", "Benutzbarkeit durch Zielgruppe"],
                    "Bei Bedarf": "Rücksprung an frühere Entwicklungsphase"
                },
                "6. Dokumentation": {
                    "allgemein": "Informationen oder Handbücher",
                    "für": {
                        "Entwickler": "zur Weiterentwicklung",
                        "Administratoren": ["Installation", "Konfiguration","Anpassung"],
                        "Endanwender": "Erläuterung der Funktionen"
                    }
                }
            },
            "Entwicklungsreihenfolgen": {
                "grundlegende":{
                    "linear": {
                        "Wasserfallmodell": ["klassische Idealvorstellung", "jeder Schritt nacheinander"]
                    },
                    "iterativ": {
                        "Spiralmodell": ["modernes Verfahren", "Phasen werden mehrfach durchlaufen"]
                    }
                },
                "agile": {
                    "Durchläufe": "so kurz wie möglich",
                    "Beispiel": {
                        "Extreme Programming": ["häufiger release", "Änderungswünsche können jederzeit berücksichtigt werden"]
                    }
                }
            },
            "Praxis": "klare zeitliche Abfolgen der Phasen werden selten eingehalten",
            "Gefahren": "erst in einer späten Phase wird bemerkt, dass Projektziele verfehlt werden",
            "Mögliche exteme Lösung": {
                "Test-driven Development": "zuerst werden Tests geschrieben und danach folgt die eigentliche Implementierung"
            }
    
        },
        "Projektmanagement": {
            "allgemein": "Gesamtheit von Führungsaufgaben, -organisation, -techniken und -mitteln für die Abwicklung eines Projektes. (DIN 69901)",
            "Durchführung": "kontinuierlich",
            "Wissensfelder":{
                "Integrationsmanagement": {
                    "koordiniert": ["Projektbestandteile", "Projektbeteiligten"]
                },
                "Umfangsmanagement": {
                    "englisch": "Scope Management",
                    "überwacht": {
                        "Projektzustand": ["Ziele", "Vorgaben"]
                    },
                    "notwendige Zieländerung": "gelegentlich erst während des Projektablaufs erkannt"
                },
                "Zeitmanagement": {
                    "achtet auf": "Einhaltung des Projektzeitplans",
                    "techniken":{
                        "Netzplan": ["stellt Aufgaben in Zeitliche Beziehungen (Reihenfolgen) zueinander", "kann tatsächliche Dauer nicht grafisch darstellen"],
                        "Gantt-Diagramm":"Abläufe werden als Balken dargestellt"
                    }
                },
                "Kostenmanagement": {
                    "kontrolliert und reguliert": "Kosten im Rahmen des Budgets"
                },
                "Qualitätsmanagement": {
                    "gewährleistet": "bestimmten Qualitätsstandard"
                },
                "Ressourcenmanagement": {
                    "steuert": ["Teammitglieder", "Arbeitsmittel"]
                },
                "Kommunikationsmanagement": {
                    "ist": "Abteilungs- und Hierarchieübergreifend", 
                    "regelt und legt fest": ["Kommunikationsmittel", "Kommunikationsstandards"]
                },
                "Risikomanagement": {
                    "umfasst": "weitsichtige Notfallplanung",
                    "reagiert flexibel auf": {
                        "ausfall": ["Teammitglieder", "Arbeitsmittel"]
                    }
                },
                "Beschaffungsmanagement": {
                    "verhindert": "Verzögerungen",
                    "koordiniert": {
                        "Arbeitsmittel-": ["Kapazitäten", "Nachbestellungen", "Lieferzeiten"]
                    }
                }
            }
        }
    }
    }